// Generated by CoffeeScript 1.12.5
var TwitchBotStream;

TwitchBotStream = (function() {
  var get_url_config, get_url_lang, put_url_config, set_url_data;

  function TwitchBotStream() {}

  get_url_config = "/get/data/config/";

  get_url_lang = "/get/data/lang/";

  put_url_config = "/put/data/config/";

  set_url_data = "/set/data/config/";

  TwitchBotStream.prototype.init = function() {
    var CONFIG, LANGUAGE;
    LANGUAGE = null;
    CONFIG = null;
    if (!this.checkInstall()) {
      return document.location = "/installation/";
    }
  };

  TwitchBotStream.prototype.admin_panel_0 = function() {
    var that;
    that = this;
    if (that.checkBotStart()) {
      document.getElementById("lang_panel_bot_start").classList.add("active");
      document.getElementById("lang_panel_bot_stop").classList.remove("active");
    } else if (!that.checkBotStart()) {
      document.getElementById("lang_panel_bot_stop").classList.add("active");
      document.getElementById("lang_panel_bot_start").classList.remove("active");
    }
    try {
      document.getElementById("lang_panel_bot_start").addEventListener("click", function() {
        that.requestAjax(set_url_data + "?config.bot.start=true", "GET");
        if (that.checkBotStart()) {
          document.getElementById("lang_panel_bot_start").classList.add("active");
          return document.getElementById("lang_panel_bot_stop").classList.remove("active");
        }
      });
    } catch (error) {}
    try {
      document.getElementById("lang_panel_bot_stop").addEventListener("click", function() {
        that.requestAjax(set_url_data + "?config.bot.start=false", "GET");
        that.checkBotStart();
        if (!that.checkBotStart()) {
          document.getElementById("lang_panel_bot_stop").classList.add("active");
          return document.getElementById("lang_panel_bot_start").classList.remove("active");
        }
      });
    } catch (error) {}
    try {
      this.CONFIG = JSON.parse(this.requestAjax(get_url_config, "GET"));
      document.getElementById("admin_0_input_1").value = "#" + this.CONFIG.BOT.color;
      return document.getElementById("lang_panel_bot_color_save").addEventListener("click", function() {
        that.requestAjax(put_url_config + ("?config.bot.color=" + (document.getElementById("admin_0_input_1").value.substring(1))), "GET");
        return document.location = "/#administration";
      });
    } catch (error) {}
  };

  TwitchBotStream.prototype.administration = function() {
    var that;
    that = this;
    document.getElementById("admin_MainPanel").innerHTML = that.requestAjax("/model/admin_0.html", "GET");
    that.languageInit();
    that.admin_panel_0();
    return window.addEventListener("hashchange", function() {
      if (window.location.hash === "#administration") {
        document.getElementById("admin_MainPanel").innerHTML = that.requestAjax("/model/admin_0.html", "GET");
        that.languageInit();
        return that.admin_panel_0();
      } else if (window.location.hash === "#command") {
        return console.log(window.location.hash);
      } else if (window.location.hash === "#stats") {
        return console.log(window.location.hash);
      }
    });
  };

  TwitchBotStream.prototype.installation = function() {
    var Parsed, that;
    Parsed = JSON.parse(this.requestAjax(get_url_config, "GET"));
    if (Parsed.OPTION.instalX === Parsed.OPTION.instalXmax) {
      return document.location = "/";
    } else if (Parsed.OPTION.instalX === "0") {
      document.getElementById("installation_instalX").innerHTML = Parsed.OPTION.instalX;
      document.getElementById("installation_instalXmax").innerHTML = Parsed.OPTION.instalXmax;
      document.getElementById("installation_content").innerHTML = this.requestAjax("/model/install_0.html", "GET");
      try {
        that = this;
        return document.getElementById("install_0_arrow").addEventListener("click", function() {
          that.requestAjax(put_url_config + "?config.option.instalx=1", "GET");
          return document.location = "/installation/";
        });
      } catch (error) {}
    } else if (Parsed.OPTION.instalX === "1") {
      document.getElementById("installation_instalX").innerHTML = Parsed.OPTION.instalX;
      document.getElementById("installation_instalXmax").innerHTML = Parsed.OPTION.instalXmax;
      document.getElementById("installation_content").innerHTML = this.requestAjax("/model/install_1.html", "GET");
      try {
        that = this;
        return document.getElementById("install_1_arrow").addEventListener("click", function() {
          that.requestAjax(put_url_config + ("?\nconfig.user.chanel=" + (document.getElementById("install_1_input").value) + "\n&config.option.instalx=2"));
          return document.location = "/installation/";
        });
      } catch (error) {}
    } else if (Parsed.OPTION.instalX === "2") {
      document.getElementById("installation_instalX").innerHTML = Parsed.OPTION.instalX;
      document.getElementById("installation_instalXmax").innerHTML = Parsed.OPTION.instalXmax;
      document.getElementById("installation_content").innerHTML = this.requestAjax("/model/install_2.html", "GET");
      try {
        that = this;
        return document.getElementById("install_2_arrow").addEventListener("click", function() {
          that.requestAjax(put_url_config + ("?\nconfig.user.username=" + (document.getElementById("install_2_input_1").value) + "\n&config.user.password=" + (document.getElementById("install_2_input_2").value) + "\n&config.option.instalx=3"));
          return document.location = "/installation/";
        });
      } catch (error) {}
    } else if (Parsed.OPTION.instalX === "3") {
      document.getElementById("installation_instalX").innerHTML = Parsed.OPTION.instalX;
      document.getElementById("installation_instalXmax").innerHTML = Parsed.OPTION.instalXmax;
      document.getElementById("installation_content").innerHTML = this.requestAjax("/model/install_3.html", "GET");
      try {
        that = this;
        return document.getElementById("install_3_arrow").addEventListener("click", function() {
          that.requestAjax(put_url_config + ("?\nconfig.bot.color=" + (document.getElementById("install_3_input_1").value) + "\n&config.option.instalx=4"));
          return document.location = "/installation/";
        });
      } catch (error) {}
    } else if (Parsed.OPTION.instalX === "4") {
      document.getElementById("installation_instalX").innerHTML = Parsed.OPTION.instalX;
      document.getElementById("installation_instalXmax").innerHTML = Parsed.OPTION.instalXmax;
      document.getElementById("installation_content").innerHTML = this.requestAjax("/model/install_4.html", "GET");
      try {
        that = this;
        return document.getElementById("install_4_input_1").addEventListener("click", function() {
          that.requestAjax(put_url_config + "?\nconfig.option.instalx=5");
          return document.location = "/";
        });
      } catch (error) {}
    }
  };

  TwitchBotStream.prototype.checkBotStart = function() {
    var Parsed;
    Parsed = JSON.parse(this.requestAjax(get_url_config, "GET"));
    if (Parsed.BOT.start) {
      return true;
    } else {
      return false;
    }
  };

  TwitchBotStream.prototype.languageInit = function() {
    this.LANGUAGE = JSON.parse(this.requestAjax(get_url_lang, "GET"));
    this.CONFIG = JSON.parse(this.requestAjax(get_url_config, "GET"));
    try {
      document.getElementById("lang_install_next").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_next;
    } catch (error) {}
    try {
      document.getElementById("lang_install_install").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_install;
    } catch (error) {}
    try {
      document.getElementById("lang_install_installing").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_installing;
    } catch (error) {}
    try {
      document.getElementById("lang_install_presentation").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_presentation;
    } catch (error) {}
    try {
      document.getElementById("lang_install_bot_game").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_bot_game;
    } catch (error) {}
    try {
      document.getElementById("lang_install_bot_spam").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_bot_spam;
    } catch (error) {}
    try {
      document.getElementById("lang_install_bot_mods").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_bot_mods;
    } catch (error) {}
    try {
      document.getElementById("lang_install_bot_blacklist").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_bot_blacklist;
    } catch (error) {}
    try {
      document.getElementById("lang_install_select_chanel").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_select_chanel;
    } catch (error) {}
    try {
      document.getElementById("lang_install_select_user").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_select_user;
    } catch (error) {}
    try {
      document.getElementById("lang_install_user").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_user;
    } catch (error) {}
    try {
      document.getElementById("lang_install_password").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_password;
    } catch (error) {}
    try {
      document.getElementById("lang_install_bot_edit").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_bot_edit;
    } catch (error) {}
    try {
      document.getElementById("lang_install_bot_color").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_bot_color;
    } catch (error) {}
    try {
      document.getElementById("lang_install_success").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_success;
    } catch (error) {}
    try {
      document.getElementById("lang_install_administration").innerHTML = this.LANGUAGE.LANGUAGE.lang_install_administration;
    } catch (error) {}
    try {
      document.getElementById("lang_admin_administration").innerHTML = this.LANGUAGE.LANGUAGE.lang_admin_administration;
    } catch (error) {}
    try {
      document.getElementById("lang_nav_statistic").innerHTML = this.LANGUAGE.LANGUAGE.lang_nav_statistic;
    } catch (error) {}
    try {
      document.getElementById("lang_nav_command").innerHTML = this.LANGUAGE.LANGUAGE.lang_nav_command;
    } catch (error) {}
    try {
      document.getElementById("lang_nav_title").innerHTML = this.LANGUAGE.LANGUAGE.lang_nav_title;
    } catch (error) {}
    try {
      document.getElementById("lang_nav_admin").innerHTML = this.LANGUAGE.LANGUAGE.lang_nav_admin;
    } catch (error) {}
    try {
      document.getElementById("lang_panel_admin").innerHTML = this.LANGUAGE.LANGUAGE.lang_panel_admin;
    } catch (error) {}
    try {
      document.getElementById("lang_panel_bot_start").innerHTML = this.LANGUAGE.LANGUAGE.lang_panel_bot_start;
    } catch (error) {}
    try {
      document.getElementById("lang_panel_bot_stop").innerHTML = this.LANGUAGE.LANGUAGE.lang_panel_bot_stop;
    } catch (error) {}
    try {
      document.getElementById("lang_panel_bot_color").innerHTML = this.LANGUAGE.LANGUAGE.lang_panel_bot_color;
    } catch (error) {}
    try {
      document.getElementById("lang_panel_bot_color_hex").innerHTML = this.LANGUAGE.LANGUAGE.lang_panel_bot_color_hex;
    } catch (error) {}
    try {
      document.getElementById("lang_panel_bot_color_save").innerHTML = this.LANGUAGE.LANGUAGE.lang_panel_bot_color_save;
    } catch (error) {}
    try {
      return document.getElementById("config_bot_name").innerHTML = this.CONFIG.USER.username;
    } catch (error) {}
  };

  TwitchBotStream.prototype.checkInstall = function() {
    var Parsed;
    Parsed = JSON.parse(this.requestAjax(get_url_config, "GET"));
    if (Parsed.OPTION.instalX === Parsed.OPTION.instalXmax) {
      return true;
    } else {
      return false;
    }
  };

  TwitchBotStream.prototype.requestAjax = function(fun_url, fun_method) {
    var xmlHTTP;
    xmlHTTP = new XMLHttpRequest();
    xmlHTTP.open(fun_method || "GET", fun_url, false);
    xmlHTTP.send(null);
    return xmlHTTP.responseText;
  };

  return TwitchBotStream;

})();

TwitchBotStream = new TwitchBotStream();
